import 'package:sqflite/sqflite.dart';


class DatabaseManager {
  static final DatabaseHelper instance = DatabaseHelper._privateConstructor();
  static Database? _database;

  DatabaseHelper._privateConstructor();

  Future<Database> get database async {
    if (_database != null) {
      return _database!;
    }

    _database = await _initDatabase();
    return _database!;
  }

  Future<Database> _initDatabase() async {
    String path = await getDatabasesPath();
    path = '$path/my_database.db';

    return await openDatabase(
      path,
      version: 1,
      onCreate: (db, version) async {
        await db.execute('
          CREATE TABLE dbsettings (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            databaseName TEXT,
            host TEXT,
            dbuser TEXT,
            password TEXT
          )
        ');
      },
    );
  }

  Future<void> insertDbsetting(Dbsetting dbsetting) async {
    final db = await database;

    await db.insert(
      'dbsettings',
      {
        'databaseName': dbsetting.databaseName,
        'host': dbsetting.host,
        'dbuser': dbsetting.dbuser,
        'password': dbsetting.dbuser
      },
      conflictAlgorithm: ConflictAlgorithm.replace,
    );
  }
}