class GearShape extends CustomPainter {
  @override
  void paint(Canvas canvas, Size size) {
    final paint = Paint()
      ..color = Colors.grey[400]!
      ..style = PaintingStyle.fill;

    final path = Path()
      ..lineTo(size.width / 2, 0)
      ..lineTo(size.width / 2, size.height / 4)
      ..arcToPoint(
        Offset(size.width / 2 + size.height / 4, size.height / 2),
        radius: Radius.circular(size.height / 4),
      )
      ..arcToPoint(
        Offset(size.width / 2, size.height - size.height / 4),
        radius: Radius.circular(size.height / 4),
      )
      ..lineTo(size.width / 2, size.height)
      ..lineTo(0, size.height)
      ..lineTo(0, size.height / 2)
      ..lineTo(size.width / 2, size.height / 2)
      ..lineTo(size.width / 2, size.height / 4);

    canvas.drawPath(path, paint);
  }

  @override
  bool shouldRepaint(GearShape oldDelegate) => false;
}

class GearContainer extends StatelessWidget {
  const GearContainer({
    Key? key,
    required this.width,
    required this.height,
  }) : super(key: key);

  final double width;
  final double height;

  @override
  Widget build(BuildContext context) {
    return Container(
      width: width,
      height: height,
      child: CustomPaint(
        painter: GearShape(),
      ),
    );
  }
}